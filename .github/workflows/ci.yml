name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov ruff mypy
    
    - name: Run Ruff linter
      run: |
        ruff check . --output-format=github
      continue-on-error: true
    
    - name: Run Ruff formatter check
      run: |
        ruff format --check .
      continue-on-error: true
    
    - name: Run type checks with mypy
      run: |
        mypy models.py --ignore-missing-imports --no-error-summary 2>&1 | head -20 || echo "⚠️ Type hints need improvement"
      continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests with pytest
      run: |
        pytest -v --cov=. --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Check dependencies for vulnerabilities
      run: |
        pip install -r requirements.txt
        safety check --json
      continue-on-error: true

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [code-quality, test, security-scan]
    if: always()
    
    steps:
    - name: Check build status
      run: |
        echo "Code Quality: ${{ needs.code-quality.result }}"
        echo "Tests: ${{ needs.test.result }}"
        echo "Security Scan: ${{ needs.security-scan.result }}"
        
        if [ "${{ needs.test.result }}" != "success" ]; then
          echo "❌ Tests failed"
          exit 1
        fi
        
        echo "✅ All checks completed"